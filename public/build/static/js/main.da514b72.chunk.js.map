{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","family","id","name","email","CardList","map","searchBox","placeholder","handleChange","type","onChange","App","state","searchField","fetch","then","response","json","users","setState","this","filtereFamily","filter","toLocaleLowerCase","includes","toLowerCase","e","target","value","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yTAYgBA,EAVH,SAACC,GAAD,OAEZ,sBAAKC,UAAU,iBAAf,UACA,qBAAKC,IAAI,SACJC,IAAG,+BAA0BH,EAAMI,OAAOC,GAAvC,mBACP,+BAAKL,EAAMI,OAAOE,KAAlB,OACA,4BAAIN,EAAMI,OAAOG,YCMJC,G,MAXE,SAACR,GAEjB,OAAO,qBAAKC,UAAU,YAAf,SACLD,EAAMI,OAAOK,KAAI,SAAAL,GAAM,OACjB,cAAC,EAAD,CACLA,OAAUA,GADMA,EAAOC,WCQVK,G,MATC,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAYC,EAAd,EAAcA,aAAd,OAEjB,uBACEX,UAAU,SACPY,KAAM,SACNF,YAAaA,EACbG,SAAUF,MCJMG,E,kDACpB,aAAe,IAAD,8BACZ,gBAEKC,MAAQ,CACVZ,OAAO,GACPa,YAAY,IALH,E,qDAQZ,WAAoB,IAAD,OACjBC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAK,OAAE,EAAKC,SAAS,CAACnB,OAAOkB,S,oBAIvC,WAAU,IAAD,SACsBE,KAAKR,MAA3BZ,EADA,EACAA,OAAOa,EADP,EACOA,YACRQ,EAAgBrB,EAAOsB,QAAO,SAAAtB,GAAM,OACxCA,EAAOE,KAAKqB,oBAAoBC,SAASX,EAAYY,kBAErD,OAEE,sBAAK5B,UAAU,MAAf,UACA,6CACA,cAAC,EAAD,CACEU,YAAY,gBACZC,aAAc,SAAAkB,GAAC,OAAE,EAAKP,SAAS,CAACN,YAAYa,EAAEC,OAAOC,WACtD,cAAC,EAAD,CAAU5B,OAASqB,W,GA5BMQ,IAAMC,WCIzBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.da514b72.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.style.css';\r\n const Card =(props)=>(\r\n\r\n\t<div className='card-container'>\r\n\t<img alt='family'\r\n\t     src={`https://robohash.org/${props.family.id}?size=140x140`}/>\r\n\t\t<h2>{props.family.name} </h2>\r\n\t\t<p>{props.family.email}</p>\r\n\t</div>\r\n\r\n\t);\r\n\texport default Card;\r\n","import React from 'react';\r\nimport Card from '../card/card.component'\r\nimport './card-list.style.css';\r\n  const CardList=(props)=>{\r\n\t\r\n\treturn <div className='card-list'>\r\n\t\t{props.family.map(family=>(\r\n         <Card key={family.id}\r\n\t\t  family = {family}/>\r\n\t\t\t))}\r\n\t</div>;\r\n        \r\n\t\t\r\n};\r\nexport default CardList;","import React from 'react';\r\n\r\n\r\n\r\nimport './search-box.style.css';\r\n\r\n const searchBox= ({placeholder,handleChange})=>(\r\n\r\n <input \r\n   className='search'\r\n      type ='search' \r\n      placeholder={placeholder}\r\n      onChange={handleChange}\r\n        />\r\n\t);\r\n  export default searchBox;","\nimport React  from'react';\nimport './App.css';\nimport CardList from './components/card-list/card-list.component';\nimport SearchBox from './components/search-box/search-box.component';\n\n\n\n export default class App extends React.Component {\n  constructor() {\n    super();\n  \n    this.state = {\n       family:[],\n       searchField:''\n    };\n    }  \n    componentDidMount(){\n      fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response =>response.json())\n      .then(users=>this.setState({family:users}))\n        \n    }\n  \n  render() {\n    const {family,searchField} = this.state;\n    const filtereFamily = family.filter(family=>\n      family.name.toLocaleLowerCase().includes(searchField.toLowerCase())\n      );\n      return (\n    \n        <div className=\"App\">\n        <h1>Family Card</h1>\n        <SearchBox\n          placeholder='search family'\n          handleChange={e=>this.setState({searchField:e.target.value})}/>\n         <CardList family ={filtereFamily} />\n      </div>\n   );\n  } }\n    \n    \n     \n   \n       \n       \n\n ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}